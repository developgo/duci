// Code generated by MockGen. DO NOT EDIT.
// Source: domain/model/log/log.go

// Package mock_log is a generated GoMock package.
package mock_log

import (
	log "github.com/duck8823/duci/domain/model/log"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockLog is a mock of Log interface
type MockLog struct {
	ctrl     *gomock.Controller
	recorder *MockLogMockRecorder
}

// MockLogMockRecorder is the mock recorder for MockLog
type MockLogMockRecorder struct {
	mock *MockLog
}

// NewMockLog creates a new mock instance
func NewMockLog(ctrl *gomock.Controller) *MockLog {
	mock := &MockLog{ctrl: ctrl}
	mock.recorder = &MockLogMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLog) EXPECT() *MockLogMockRecorder {
	return m.recorder
}

// ReadLine mocks base method
func (m *MockLog) ReadLine() (*log.Line, error) {
	ret := m.ctrl.Call(m, "ReadLine")
	ret0, _ := ret[0].(*log.Line)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadLine indicates an expected call of ReadLine
func (mr *MockLogMockRecorder) ReadLine() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadLine", reflect.TypeOf((*MockLog)(nil).ReadLine))
}
